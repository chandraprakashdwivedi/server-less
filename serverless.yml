service: test-sls # NOTE: update this with your service name
#awsKmsKeyArn: arn:aws:kms:us-east-1:XXXXXX:key/some-hash

provider:
  name: aws
  runtime: python3.6
  versionFunctions: false
  #role: arn:aws:iam::12345:role/LambdaRole #For roles based login
  stage: dev
  region: ap-south-1
  #notificationArns:
   #   - 'arn:aws:sns:ap-south-1:XXXXXX:mytopic'

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  s3bucket:
    handler: lambda_functions/s3bucket.hello
    memorySize: 128
    description: My function
    #onError: arn:aws:sns:ap-south-1:XXXXXX:mytopic
    events:
        - http:
            path: first-endpoint
            method: GET
            cors: true
       # - sns:
        #    topicName: ${self:service}-${self:provider.stage}-topic
         #   displayName: SNSTopic
##  list:
##    handler: lambda_functions/get_all_responses.list_responses
##    events:
##      - http:
##          path: lambda_functions
##          method: get
##          cors: true
##  delete:
##    handler: lambda_functions/delete_response.delete
##    events:
##      - http:
##          path: lambda_functions/{app_name}
##          method: delete
##          cors: true
##  insert:
##    handler: lambda_functions/insert_response.insert
##    events:
##      - http:
##          path: lambda_functions
##          method: post
##          cors: true
##  evaluate:
##    handler: lambda_functions/evaluate_response.evaluate
##    events:
##      - http:
##          path: lambda_functions/{app_name}
##          method: get
##          cors: true

resources:
  Resources:
      uploadBucket:
          Type: AWS::S3::Bucket
          Properties:
              BucketName: ${self:service}-${self:provider.stage}-uploads
      SNSTopic:
          Type: AWS::SNS::Topic
          Properties:
            DisplayName: SNSTopic
            TopicName: ${self:service}-${self:provider.stage}-topic
            Subscription:
              - Protocol: sms
                receiver: +918006363103
                sender: cp-sns
                message: 'Hello !! Hi r u? Here is a alert"
              - Protocol: lambda
                Endpoint: { “Fn::Join” : [“”, [“arn:aws:sqs:${self:provider.region}:“, { “Ref” : “AWS::AccountId” }, “:${self:resources.Resources.SQSQueue.Properties.QueueName}” ] ] }
#    TestDynamoDbTable:
#      Type: 'AWS::DynamoDB::Table'
#      DeletionPolicy: Retain
#      Properties:
#        AttributeDefinitions:
#          -
#            AttributeName: app_name
#            AttributeType: S
#        KeySchema:
#          -
#            AttributeName: app_name
#            KeyType: HASH
#        ProvisionedThroughput:
#          ReadCapacityUnits: 1
#          WriteCapacityUnits: 1
#        TableName: ${self:service}-${self:provider.stage}-table1
      
